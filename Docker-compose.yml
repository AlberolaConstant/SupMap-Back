version: "3.9"

services:
  user-db:
    image: postgres:15
    container_name: user-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      retries: 5
      start_period: 10s

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    depends_on:
      user-db:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DB_HOST: user-db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - backend
    ports:
      - "4002:8080"

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    depends_on:
      user-db:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DB_HOST: user-db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - backend
    ports:
      - "4001:8080"

volumes:
  pgdata:

networks:
  backend:
